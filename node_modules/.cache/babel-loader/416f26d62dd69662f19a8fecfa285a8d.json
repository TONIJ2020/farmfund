{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TONY\\\\Desktop\\\\Genesys-Tech-Hub\\\\Farmfund\\\\src\\\\Components\\\\ProgressBar\\\\ProgressBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressBar extends React.Component {\n  static throwError() {\n    return new Error(...arguments);\n  }\n\n  render() {\n    const {\n      color,\n      completed,\n      animation,\n      height,\n      className,\n      children,\n      ...rest\n    } = this.props;\n    const style = {\n      backgroundColor: color,\n      width: completed + '%',\n      transition: `width ${animation}ms`,\n      height: height\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className || 'progressbar-container',\n      ...rest,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressbar-progress\",\n        style: style,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nProgressBar.propTypes = {\n  completed: (props, propName) => {\n    if (typeof props[propName] !== 'number') return Progress.throwError('Invalid Props: \"completed\" should ∈ ℝ ');\n\n    if (props[propName] < 0 || props[propName] > 100) {\n      return Progress.throwError('Invalid Props: \"completed\" should be between 0 and 100');\n    }\n  },\n  color: PropTypes.string,\n  animation: PropTypes.number,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nProgressBar.defaultProps = {\n  completed: 0,\n  color: '#0BD318',\n  animation: 200,\n  height: 10\n};\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/TONY/Desktop/Genesys-Tech-Hub/Farmfund/src/Components/ProgressBar/ProgressBar.js"],"names":["React","PropTypes","ProgressBar","Component","throwError","Error","arguments","render","color","completed","animation","height","className","children","rest","props","style","backgroundColor","width","transition","propTypes","propName","Progress","string","number","oneOfType","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAqBxC,SAAOC,UAAP,GAAoB;AAClB,WAAO,IAAIC,KAAJ,CAAU,GAAGC,SAAb,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA,SAAnB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA,SAAtC;AAAiDC,MAAAA,QAAjD;AAA2D,SAAGC;AAA9D,QAAsE,KAAKC,KAAjF;AACA,UAAMC,KAAK,GAAG;AACZC,MAAAA,eAAe,EAAET,KADL;AAEZU,MAAAA,KAAK,EAAET,SAAS,GAAG,GAFP;AAGZU,MAAAA,UAAU,EAAG,SAAQT,SAAU,IAHnB;AAIZC,MAAAA,MAAM,EAAEA;AAJI,KAAd;AAOA,wBACE;AAAK,MAAA,SAAS,EAAEC,SAAS,IAAI,uBAA7B;AAAA,SAA0DE,IAA1D;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAEE,KAA7C;AAAA,kBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzCuC;;AAApCX,W,CACGkB,S,GAAY;AACjBX,EAAAA,SAAS,EAAE,CAACM,KAAD,EAAQM,QAAR,KAAqB;AAC9B,QAAI,OAAON,KAAK,CAACM,QAAD,CAAZ,KAA2B,QAA/B,EACE,OAAOC,QAAQ,CAAClB,UAAT,CAAoB,wCAApB,CAAP;;AACF,QAAIW,KAAK,CAACM,QAAD,CAAL,GAAkB,CAAlB,IAAuBN,KAAK,CAACM,QAAD,CAAL,GAAkB,GAA7C,EAAkD;AAChD,aAAOC,QAAQ,CAAClB,UAAT,CAAoB,wDAApB,CAAP;AACD;AACF,GAPgB;AAQjBI,EAAAA,KAAK,EAAEP,SAAS,CAACsB,MARA;AASjBb,EAAAA,SAAS,EAAET,SAAS,CAACuB,MATJ;AAUjBb,EAAAA,MAAM,EAAEV,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,MAA7B,CAApB;AAVS,C;AADftB,W,CAcGwB,Y,GAAe;AACpBjB,EAAAA,SAAS,EAAE,CADS;AAEpBD,EAAAA,KAAK,EAAE,SAFa;AAGpBE,EAAAA,SAAS,EAAE,GAHS;AAIpBC,EAAAA,MAAM,EAAE;AAJY,C;AA8BxB,eAAeT,WAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProgressBar extends React.Component {\r\n  static propTypes = {\r\n    completed: (props, propName) => {\r\n      if (typeof props[propName] !== 'number')\r\n        return Progress.throwError('Invalid Props: \"completed\" should ∈ ℝ ');\r\n      if (props[propName] < 0 || props[propName] > 100) {\r\n        return Progress.throwError('Invalid Props: \"completed\" should be between 0 and 100');\r\n      }\r\n    },\r\n    color: PropTypes.string,\r\n    animation: PropTypes.number,\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  };\r\n\r\n  static defaultProps = {\r\n    completed: 0,\r\n    color: '#0BD318',\r\n    animation: 200,\r\n    height: 10,\r\n  };\r\n\r\n  static throwError() {\r\n    return new Error(...arguments);\r\n  }\r\n\r\n  render() {\r\n    const {color, completed, animation, height, className, children, ...rest} = this.props;\r\n    const style = {\r\n      backgroundColor: color,\r\n      width: completed + '%',\r\n      transition: `width ${animation}ms`,\r\n      height: height,\r\n    };\r\n\r\n    return (\r\n      <div className={className || 'progressbar-container'} {...rest}>\r\n        <div className=\"progressbar-progress\" style={style}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}