{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TONY\\\\Desktop\\\\Genesys-Tech-Hub\\\\Farmfund\\\\src\\\\Components\\\\ProgressBar\\\\ProgressBar.js\";\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport { Step } from '../step';\nimport { getSafePercent, getStepPosition } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressBar extends React.Component {\n  render() {\n    const {\n      percent,\n      children,\n      stepPositions = [],\n      unfilledBackground = null,\n      filledBackground = null,\n      width = null,\n      height = null,\n      hasStepZero = true,\n      text = null\n    } = this.props;\n    invariant(!(stepPositions.length > 0 && stepPositions.length !== React.Children.count(children)), 'When specifying a stepPositions props, the number of children must match the length of the positions array.');\n    const safePercent = getSafePercent(percent);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RSPBprogressBar\",\n      style: {\n        background: unfilledBackground,\n        width,\n        height\n      },\n      children: [React.Children.map(children, (step, index) => {\n        const position = stepPositions.length > 0 ? stepPositions[index] : getStepPosition(React.Children.count(children), index, hasStepZero);\n        return /*#__PURE__*/React.cloneElement(step, {\n          accomplished: position <= safePercent,\n          position,\n          index\n        });\n      }), text ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RSPBprogressBarText\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RSPBprogression\",\n        style: {\n          background: filledBackground,\n          width: `${safePercent}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/TONY/Desktop/Genesys-Tech-Hub/Farmfund/src/Components/ProgressBar/ProgressBar.js"],"names":["React","invariant","Step","getSafePercent","getStepPosition","ProgressBar","Component","render","percent","children","stepPositions","unfilledBackground","filledBackground","width","height","hasStepZero","text","props","length","Children","count","safePercent","background","map","step","index","position","cloneElement","accomplished"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,SAAhD;;;AAcA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA4D;AAC1DC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,aAAa,GAAG,EAHZ;AAIJC,MAAAA,kBAAkB,GAAG,IAJjB;AAKJC,MAAAA,gBAAgB,GAAG,IALf;AAMJC,MAAAA,KAAK,GAAG,IANJ;AAOJC,MAAAA,MAAM,GAAG,IAPL;AAQJC,MAAAA,WAAW,GAAG,IARV;AASJC,MAAAA,IAAI,GAAG;AATH,QAUF,KAAKC,KAVT;AAYAhB,IAAAA,SAAS,CACP,EAAES,aAAa,CAACQ,MAAd,GAAuB,CAAvB,IAA4BR,aAAa,CAACQ,MAAd,KAAyBlB,KAAK,CAACmB,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAvD,CADO,EAEP,6GAFO,CAAT;AAKA,UAAMY,WAAW,GAAGlB,cAAc,CAACK,OAAD,CAAlC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAAEc,QAAAA,UAAU,EAAEX,kBAAd;AAAkCE,QAAAA,KAAlC;AAAyCC,QAAAA;AAAzC,OAAxC;AAAA,iBAEGd,KAAK,CAACmB,QAAN,CAAeI,GAAf,CAAmBd,QAAnB,EAA6B,CAACe,IAAD,EAAOC,KAAP,KAAiB;AAC7C,cAAMC,QAAQ,GAAGhB,aAAa,CAACQ,MAAd,GAAuB,CAAvB,GACbR,aAAa,CAACe,KAAD,CADA,GAEbrB,eAAe,CAACJ,KAAK,CAACmB,QAAN,CAAeC,KAAf,CAAqBX,QAArB,CAAD,EAAiCgB,KAAjC,EAAwCV,WAAxC,CAFnB;AAIA,4BAAOf,KAAK,CAAC2B,YAAN,CAAmBH,IAAnB,EAAyB;AAC9BI,UAAAA,YAAY,EAAEF,QAAQ,IAAIL,WADI;AAE9BK,UAAAA,QAF8B;AAG9BD,UAAAA;AAH8B,SAAzB,CAAP;AAKD,OAVA,CAFH,EAcGT,IAAI,gBAAG;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,cAAH,GAAuD,IAd9D,eAgBE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AACLM,UAAAA,UAAU,EAAEV,gBADP;AAELC,UAAAA,KAAK,EAAG,GAAEQ,WAAY;AAFjB;AAFT;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AA/CyD;;AAkD5D,eAAehB,WAAf","sourcesContent":["import * as React from 'react';\r\nimport invariant from 'invariant';\r\nimport { Step } from '../step';\r\nimport { getSafePercent, getStepPosition } from './utils';\r\n\r\ntype ProgressBarProps = {|\r\n  percent: number,\r\n  children: React.ChildrenArray<React.Element<typeof Step>>,\r\n  stepPositions?: Array<number>,\r\n  unfilledBackground?: string,\r\n  filledBackground?: string,\r\n  width?: number,\r\n  height?: number,\r\n  hasStepZero?: boolean,\r\n  text?: string,\r\n|};\r\n\r\nclass ProgressBar extends React.Component<ProgressBarProps> {\r\n  render() {\r\n    const {\r\n      percent,\r\n      children,\r\n      stepPositions = [],\r\n      unfilledBackground = null,\r\n      filledBackground = null,\r\n      width = null,\r\n      height = null,\r\n      hasStepZero = true,\r\n      text = null,\r\n    } = this.props;\r\n\r\n    invariant(\r\n      !(stepPositions.length > 0 && stepPositions.length !== React.Children.count(children)),\r\n      'When specifying a stepPositions props, the number of children must match the length of the positions array.',\r\n    );\r\n\r\n    const safePercent = getSafePercent(percent);\r\n\r\n    return (\r\n      <div className=\"RSPBprogressBar\" style={{ background: unfilledBackground, width, height }}>\r\n        {/* Here we're looping over the children to clone them and add them custom props */}\r\n        {React.Children.map(children, (step, index) => {\r\n          const position = stepPositions.length > 0\r\n            ? stepPositions[index]\r\n            : getStepPosition(React.Children.count(children), index, hasStepZero);\r\n\r\n          return React.cloneElement(step, {\r\n            accomplished: position <= safePercent,\r\n            position,\r\n            index,\r\n          });\r\n        })}\r\n\r\n        {text ? <div className=\"RSPBprogressBarText\">{text}</div> : null}\r\n\r\n        <div\r\n          className=\"RSPBprogression\"\r\n          style={{\r\n            background: filledBackground,\r\n            width: `${safePercent}%`,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}