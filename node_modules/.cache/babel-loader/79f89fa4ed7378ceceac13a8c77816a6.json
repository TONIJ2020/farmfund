{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TONY\\\\Desktop\\\\Genesys-Tech-Hub\\\\Farmfund\\\\src\\\\Components\\\\ProgressBar\\\\Step.js\";\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport { Transition } from 'react-transition-group';\nimport { transitions } from './Transitions';\nimport { getSafePercent } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Step extends React.Component {\n  render() {\n    const {\n      accomplished,\n      position,\n      index,\n      children,\n      transition = null,\n      transitionDuration = 300\n    } = this.props;\n    const safePosition = getSafePercent(position);\n    let style = {\n      left: `${safePosition}%`,\n      transitionDuration: `${transitionDuration}ms`\n    };\n    return /*#__PURE__*/_jsxDEV(Transition, {\n      in: accomplished,\n      timeout: transitionDuration,\n      children: state => {\n        if (transition) {\n          invariant(transitions[transition] != null, `${transition} is not listed in the built-in transitions.`);\n          style = { ...style,\n            ...transitions[transition][state]\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RSPBstep\",\n          style: style,\n          children: children({\n            accomplished,\n            position: safePosition,\n            transitionState: state,\n            index\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/TONY/Desktop/Genesys-Tech-Hub/Farmfund/src/Components/ProgressBar/Step.js"],"names":["React","invariant","Transition","transitions","getSafePercent","Step","Component","render","accomplished","position","index","children","transition","transitionDuration","props","safePosition","style","left","state","transitionState"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,GAA/B;;AAgBA,OAAO,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAA8C;AACnDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,YADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,UAAU,GAAG,IALT;AAMJC,MAAAA,kBAAkB,GAAG;AANjB,QAOF,KAAKC,KAPT;AASA,UAAMC,YAAY,GAAGX,cAAc,CAACK,QAAD,CAAnC;AAEA,QAAIO,KAAK,GAAG;AACVC,MAAAA,IAAI,EAAG,GAAEF,YAAa,GADZ;AAEVF,MAAAA,kBAAkB,EAAG,GAAEA,kBAAmB;AAFhC,KAAZ;AAKA,wBACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEL,YAAhB;AAA8B,MAAA,OAAO,EAAEK,kBAAvC;AAAA,gBACIK,KAAD,IAAW;AACV,YAAIN,UAAJ,EAAgB;AACdX,UAAAA,SAAS,CACPE,WAAW,CAACS,UAAD,CAAX,IAA2B,IADpB,EAEN,GAAEA,UAAW,6CAFP,CAAT;AAIAI,UAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAEN,eAAGb,WAAW,CAACS,UAAD,CAAX,CAAwBM,KAAxB;AAFG,WAAR;AAID;;AAED,4BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAEF,KAAjC;AAAA,oBACGL,QAAQ,CAAC;AACRH,YAAAA,YADQ;AAERC,YAAAA,QAAQ,EAAEM,YAFF;AAGRI,YAAAA,eAAe,EAAED,KAHT;AAIRR,YAAAA;AAJQ,WAAD;AADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AAvBH;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA7CkD","sourcesContent":["import * as React from 'react';\r\nimport invariant from 'invariant';\r\nimport { Transition } from 'react-transition-group';\r\nimport { transitions } from './Transitions';\r\nimport { getSafePercent } from '.';\r\n\r\ntype StepProps = {|\r\n  accomplished: boolean,\r\n  position: number,\r\n  index: number,\r\n  children: ({\r\n    accomplished: boolean,\r\n    transitionState: string,\r\n    index: number,\r\n    position: number,\r\n  }) => React.Node,\r\n  transition?: 'scale' | 'rotate' | 'skew',\r\n  transitionDuration?: number,\r\n|};\r\n\r\nexport class Step extends React.Component<StepProps> {\r\n  render() {\r\n    const {\r\n      accomplished,\r\n      position,\r\n      index,\r\n      children,\r\n      transition = null,\r\n      transitionDuration = 300,\r\n    } = this.props;\r\n\r\n    const safePosition = getSafePercent(position);\r\n\r\n    let style = {\r\n      left: `${safePosition}%`,\r\n      transitionDuration: `${transitionDuration}ms`,\r\n    };\r\n\r\n    return (\r\n      <Transition in={accomplished} timeout={transitionDuration}>\r\n        {(state) => {\r\n          if (transition) {\r\n            invariant(\r\n              transitions[transition] != null,\r\n              `${transition} is not listed in the built-in transitions.`,\r\n            );\r\n            style = {\r\n              ...style,\r\n              ...transitions[transition][state],\r\n            };\r\n          }\r\n\r\n          return (\r\n            <div className=\"RSPBstep\" style={style}>\r\n              {children({\r\n                accomplished,\r\n                position: safePosition,\r\n                transitionState: state,\r\n                index,\r\n              })}\r\n            </div>\r\n          );\r\n        }}\r\n      </Transition>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}