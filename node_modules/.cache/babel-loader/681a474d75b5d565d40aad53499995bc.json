{"ast":null,"code":"import { DEFAULT_SCOPE, showLoading, hideLoading } from './loadingBarDucks';\nconst defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED'];\nexport default function loadingBarMiddleware(config = {}) {\n  const promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes;\n  const scope = config.scope || DEFAULT_SCOPE;\n  return ({\n    dispatch\n  }) => next => action => {\n    if (action.type) {\n      const [PENDING, FULFILLED, REJECTED] = promiseTypeSuffixes;\n      const isPending = new RegExp(`${PENDING}$`, 'g');\n      const isFulfilled = new RegExp(`${FULFILLED}$`, 'g');\n      const isRejected = new RegExp(`${REJECTED}$`, 'g');\n      const actionScope = action.meta && action.meta.scope || action.scope || scope;\n\n      if (action.type.match(isPending)) {\n        dispatch(showLoading(actionScope));\n      } else if (action.type.match(isFulfilled) || action.type.match(isRejected)) {\n        dispatch(hideLoading(actionScope));\n      }\n    }\n\n    return next(action);\n  };\n}","map":{"version":3,"sources":["C:/Users/TONY/Desktop/Genesys-Tech-Hub/Farmfund/src/Components/ProgressBar/LoadingBarMiddleWare.js"],"names":["DEFAULT_SCOPE","showLoading","hideLoading","defaultTypeSuffixes","loadingBarMiddleware","config","promiseTypeSuffixes","scope","dispatch","next","action","type","PENDING","FULFILLED","REJECTED","isPending","RegExp","isFulfilled","isRejected","actionScope","meta","match"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,WAArC,QAAwD,mBAAxD;AAEA,MAAMC,mBAAmB,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,CAA5B;AAEA,eAAe,SAASC,oBAAT,CAA8BC,MAAM,GAAG,EAAvC,EAA2C;AACxD,QAAMC,mBAAmB,GAAGD,MAAM,CAACC,mBAAP,IAA8BH,mBAA1D;AACA,QAAMI,KAAK,GAAGF,MAAM,CAACE,KAAP,IAAgBP,aAA9B;AAEA,SAAO,CAAC;AAAEQ,IAAAA;AAAF,GAAD,KAAmBC,IAAD,IAAWC,MAAD,IAAY;AAC7C,QAAIA,MAAM,CAACC,IAAX,EAAiB;AACf,YAAM,CAACC,OAAD,EAAUC,SAAV,EAAqBC,QAArB,IAAiCR,mBAAvC;AAEA,YAAMS,SAAS,GAAG,IAAIC,MAAJ,CAAY,GAAEJ,OAAQ,GAAtB,EAA0B,GAA1B,CAAlB;AACA,YAAMK,WAAW,GAAG,IAAID,MAAJ,CAAY,GAAEH,SAAU,GAAxB,EAA4B,GAA5B,CAApB;AACA,YAAMK,UAAU,GAAG,IAAIF,MAAJ,CAAY,GAAEF,QAAS,GAAvB,EAA2B,GAA3B,CAAnB;AAEA,YAAMK,WAAW,GAAIT,MAAM,CAACU,IAAP,IAAeV,MAAM,CAACU,IAAP,CAAYb,KAA5B,IACGG,MAAM,CAACH,KADV,IAEGA,KAFvB;;AAIA,UAAIG,MAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBN,SAAlB,CAAJ,EAAkC;AAChCP,QAAAA,QAAQ,CAACP,WAAW,CAACkB,WAAD,CAAZ,CAAR;AACD,OAFD,MAEO,IAAIT,MAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBJ,WAAlB,KACGP,MAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBH,UAAlB,CADP,EACsC;AAC3CV,QAAAA,QAAQ,CAACN,WAAW,CAACiB,WAAD,CAAZ,CAAR;AACD;AACF;;AAED,WAAOV,IAAI,CAACC,MAAD,CAAX;AACD,GArBD;AAsBD","sourcesContent":["import { DEFAULT_SCOPE, showLoading, hideLoading } from './loadingBarDucks'\r\n\r\nconst defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED']\r\n\r\nexport default function loadingBarMiddleware(config = {}) {\r\n  const promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes\r\n  const scope = config.scope || DEFAULT_SCOPE\r\n\r\n  return ({ dispatch }) => (next) => (action) => {\r\n    if (action.type) {\r\n      const [PENDING, FULFILLED, REJECTED] = promiseTypeSuffixes\r\n\r\n      const isPending = new RegExp(`${PENDING}$`, 'g')\r\n      const isFulfilled = new RegExp(`${FULFILLED}$`, 'g')\r\n      const isRejected = new RegExp(`${REJECTED}$`, 'g')\r\n\r\n      const actionScope = (action.meta && action.meta.scope)\r\n                          || action.scope\r\n                          || scope\r\n\r\n      if (action.type.match(isPending)) {\r\n        dispatch(showLoading(actionScope))\r\n      } else if (action.type.match(isFulfilled)\r\n                 || action.type.match(isRejected)) {\r\n        dispatch(hideLoading(actionScope))\r\n      }\r\n    }\r\n\r\n    return next(action)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}